// Fill out your copyright notice in the Description page of Project Settings.

#pragma once

#include "PokemonUtils.generated.h"

enum class EPokemonSpecies : int32
{
    Missigno = 0,
    Bulbasaur,
    Ivysaur,
    Venusaur,
    Charmander,
    Charmeleon,
    Charizard,
    Squirtle,
    Wartortle,
    Blastoise,
    Caterpie,
    Metapod,
    Butterfree,
    Weedle,
    Kakuna,
    Beedrill,
    Pidgey,
    Pidgeotto,
    Pidgeot,
    Rattata,
    Raticate,
    Spearow,
    Fearow,
    Ekans,
    Arbok,
    Pikachu,
    Raichu,
    Sandshrew,
    Sandslash,
    Nidoran_Female,
    Nidorina,
    Nidoqueen,
    Nidoran_Male,
    Nidorino,
    Nidoking,
    Clefairy,
    Clefable,
    Vulpix,
    Ninetales,
    Jigglypuff,
    Wigglytuff,
    Zubat,
    Golbat,
    Oddish,
    Gloom,
    Vileplume,
    Paras,
    Parasect,
    Venonat,
    Venomoth,
    Diglett,
    Dugtrio,
    Meowth,
    Persian,
    Psyduck,
    Golduck,
    Mankey,
    Primeape,
    Growlithe,
    Arcanine,
    Poliwag,
    Poliwhirl,
    Poliwrath,
    Abra,
    Kadabra,
    Alakazam,
    Machop,
    Machoke,
    Machamp,
    Bellsprout,
    Weepinbell,
    Victreebel,
    Tentacool,
    Tentacruel,
    Geodude,
    Graveler,
    Golem,
    Ponyta,
    Rapidash,
    Slowpoke,
    Slowbro,
    Magnemite,
    Magneton,
    Farfetch_d,
    Doduo,
    Dodrio,
    Seel,
    Dewgong,
    Grimer,
    Muk,
    Shellder,
    Cloyster,
    Gastly,
    Haunter,
    Gengar,
    Onix,
    Drowzee,
    Hypno,
    Krabby,
    Kingler,
    Voltorb,
    Electrode,
    Exeggcute,
    Exeggutor,
    Cubone,
    Marowak,
    Hitmonlee,
    Hitmonchan,
    Lickitung,
    Koffing,
    Weezing,
    Rhyhorn,
    Rhydon,
    Chansey,
    Tangela,
    Kangaskhan,
    Horsea,
    Seadra,
    Goldeen,
    Seaking,
    Staryu,
    Starmie,
    Mr_Mime,
    Scyther,
    Jynx,
    Electabuzz,
    Magmar,
    Pinsir,
    Tauros,
    Magikarp,
    Gyarados,
    Lapras,
    Ditto,
    Eevee,
    Vaporeon,
    Jolteon,
    Flareon,
    Porygon,
    Omanyte,
    Omastar,
    Kabuto,
    Kabutops,
    Aerodactyl,
    Snorlax,
    Articuno,
    Zapdos,
    Moltres,
    Dratini,
    Dragonair,
    Dragonite,
    Mewtwo,
    Mew,
    Chikorita,
    Bayleef,
    Meganium,
    Cyndaquil,
    Quilava,
    Typhlosion,
    Totodile,
    Croconaw,
    Feraligatr,
    Sentret,
    Furret,
    Hoothoot,
    Noctowl,
    Ledyba,
    Ledian,
    Spinarak,
    Ariados,
    Crobat,
    Chinchou,
    Lanturn,
    Pichu,
    Cleffa,
    Igglybuff,
    Togepi,
    Togetic,
    Natu,
    Xatu,
    Mareep,
    Flaaffy,
    Ampharos,
    Bellossom,
    Marill,
    Azumarill,
    Sudowoodo,
    Politoed,
    Hoppip,
    Skiploom,
    Jumpluff,
    Aipom,
    Sunkern,
    Sunflora,
    Yanma,
    Wooper,
    Quagsire,
    Espeon,
    Umbreon,
    Murkrow,
    Slowking,
    Misdreavus,
    Unown,
    Wobbuffet,
    Girafarig,
    Pineco,
    Forretress,
    Dunsparce,
    Gligar,
    Steelix,
    Snubbull,
    Granbull,
    Qwilfish,
    Scizor,
    Shuckle,
    Heracross,
    Sneasel,
    Teddiursa,
    Ursaring,
    Slugma,
    Magcargo,
    Swinub,
    Piloswine,
    Corsola,
    Remoraid,
    Octillery,
    Delibird,
    Mantine,
    Skarmory,
    Houndour,
    Houndoom,
    Kingdra,
    Phanpy,
    Donphan,
    Porygon_2,
    Stantler,
    Smeargle,
    Tyrogue,
    Hitmontop,
    Smoochum,
    Elekid,
    Magby,
    Miltank,
    Blissey,
    Raikou,
    Entei,
    Suicune,
    Larvitar,
    Pupitar,
    Tyranitar,
    Lugia,
    Ho_Oh,
    Celebi,
    Treecko,
    Grovyle,
    Sceptile,
    Torchic,
    Combusken,
    Blaziken,
    Mudkip,
    Marshtomp,
    Swampert,
    Poochyena,
    Mightyena,
    Zigzagoon,
    Linoone,
    Wurmple,
    Silcoon,
    Beautifly,
    Cascoon,
    Dustox,
    Lotad,
    Lombre,
    Ludicolo,
    Seedot,
    Nuzleaf,
    Shiftry,
    Taillow,
    Swellow,
    Wingull,
    Pelipper,
    Ralts,
    Kirlia,
    Gardevoir,
    Surskit,
    Masquerain,
    Shroomish,
    Breloom,
    Slakoth,
    Vigoroth,
    Slaking,
    Nincada,
    Ninjask,
    Shedinja,
    Whismur,
    Loudred,
    Exploud,
    Makuhita,
    Hariyama,
    Azurill,
    Nosepass,
    Skitty,
    Delcatty,
    Sableye,
    Mawile,
    Aron,
    Lairon,
    Aggron,
    Meditite,
    Medicham,
    Electrike,
    Manectric,
    Plusle,
    Minun,
    Volbeat,
    Illumise,
    Roselia,
    Gulpin,
    Swalot,
    Carvanha,
    Sharpedo,
    Wailmer,
    Wailord,
    Numel,
    Camerupt,
    Torkoal,
    Spoink,
    Grumpig,
    Spinda,
    Trapinch,
    Vibrava,
    Flygon,
    Cacnea,
    Cacturne,
    Swablu,
    Altaria,
    Zangoose,
    Seviper,
    Lunatone,
    Solrock,
    Barboach,
    Whiscash,
    Corphish,
    Crawdaunt,
    Baltoy,
    Claydol,
    Lileep,
    Cradily,
    Anorith,
    Armaldo,
    Feebas,
    Milotic,
    Castform,
    Kecleon,
    Shuppet,
    Banette,
    Duskull,
    Dusclops,
    Tropius,
    Chimecho,
    Absol,
    Wynaut,
    Snorunt,
    Glalie,
    Spheal,
    Sealeo,
    Walrein,
    Clamperl,
    Huntail,
    Gorebyss,
    Relicanth,
    Luvdisc,
    Bagon,
    Shelgon,
    Salamence,
    Beldum,
    Metang,
    Metagross,
    Regirock,
    Regice,
    Registeel,
    Latias,
    Latios,
    Kyogre,
    Groudon,
    Rayquaza,
    Jirachi,
    Deoxys,
    Turtwig,
    Grotle,
    Torterra,
    Chimchar,
    Monferno,
    Infernape,
    Piplup,
    Prinplup,
    Empoleon,
    Starly,
    Staravia,
    Staraptor,
    Bidoof,
    Bibarel,
    Kricketot,
    Kricketune,
    Shinx,
    Luxio,
    Luxray,
    Budew,
    Roserade,
    Cranidos,
    Rampardos,
    Shieldon,
    Bastiodon,
    Burmy,
    Wormadam,
    Mothim,
    Combee,
    Vespiquen,
    Pachirisu,
    Buizel,
    Floatzel,
    Cherubi,
    Cherrim,
    Shellos,
    Gastrodon,
    Ambipom,
    Drifloon,
    Drifblim,
    Buneary,
    Lopunny,
    Mismagius,
    Honchkrow,
    Glameow,
    Purugly,
    Chingling,
    Stunky,
    Skuntank,
    Bronzor,
    Bronzong,
    Bonsly,
    Mime_Jr,
    Happiny,
    Chatot,
    Spiritomb,
    Gible,
    Gabite,
    Garchomp,
    Munchlax,
    Riolu,
    Lucario,
    Hippopotas,
    Hippowdon,
    Skorupi,
    Drapion,
    Croagunk,
    Toxicroak,
    Carnivine,
    Finneon,
    Lumineon,
    Mantyke,
    Snover,
    Abomasnow,
    Weavile,
    Magnezone,
    Lickilicky,
    Rhyperior,
    Tangrowth,
    Electivire,
    Magmortar,
    Togekiss,
    Yanmega,
    Leafeon,
    Glaceon,
    Gliscor,
    Mamoswine,
    Porygon_Z,
    Gallade,
    Probopass,
    Dusknoir,
    Froslass,
    Rotom,
    Uxie,
    Mesprit,
    Azelf,
    Dialga,
    Palkia,
    Heatran,
    Regigigas,
    Giratina,
    Cresselia,
    Phione,
    Manaphy,
    Darkrai,
    Shaymin,
    Arceus
};

enum class EPokemonAnimations
{
    DefaultWait = 0,
    BattleWait = 1,
    DefaultIdle1 = 10,
    DefaultIdle2 = 11,
    TurnRight = 21,
    TurnLeft = 24,
    Walk = 30,
    Run = 100,
    WildBoolStart = 260,
    WildBoolLoop = 261,
    WildBoolEnd = 262,
    RestStart = 270,
    RestLoop = 271,
    RestEnd = 272,
    SleepStart = 280,
    SleepLoop = 281,
    SleepEnd = 282,
    Roar = 300,
    WildShot = 340,
    Attack1 = 400,
    Attack2 = 410,
    RangeAttack1 = 450,
    RangeAttack2Start = 460,
    RangeAttack2Loop = 461,
    RangeAttack2End = 462,
    Damage1 = 500,
    Damage2 = 501,
    Glad = 550,
    Notice = 560,
    Hate = 563,
    UniqueWaitStart = 700,
    UniqueWaitLoop = 701,
    UniqueWaitEnd = 702,
    Eye = 8000,
};

UENUM(BlueprintType)
enum class EPokemonAnimTier : uint8
{
    Normal = 0,
    Swimming = 1,
    Flying = 2
};

UENUM(BlueprintType, meta = (Bitflags, UseEnumValuesAsMaskValuesInEditor = "true"))
enum class EPokemonMoveType : uint8
{
    None = 0U UMETA(Hidden),
    Walk = 1U << 0U,
    Swim = 1U << 1U,
    Fly = 1U << 2U,
};
ENUM_CLASS_FLAGS(EPokemonMoveType);

UENUM(BlueprintType)
enum class EPokemonType : uint8
{
    None = 0U,
    Normal = 1U,
    Fighting = 2U,
    Flying = 3U,
    Poison = 4U,
    Ground = 5U,
    Rock = 6U,
    Bug = 7U,
    Ghost = 8U,
    Steel = 9U,
    Fire = 10U,
    Water = 11U,
    Grass = 12U,
    Electric = 13U,
    Psychic = 14U,
    Ice = 15U,
    Dragon = 16U,
    Dark = 17U,
    Fairy = 18U,
    Stellar = 19U,
};

UENUM(BlueprintType)
enum class EPokemonStatType : uint8
{
    None = 0U,
    HP = 1U,
    Attack = 2U,
    Defense = 3U,
    SpAttack = 4U,
    SpDefense = 5U,
    Speed = 6U,
    Accuracy = 7U,
    Evasion = 8U,
    CritRating = 9U
};

UENUM(BlueprintType)
enum class EPokemonMoveAilment : uint8
{
    None = 0U,
    Paralysis,
    Sleep,
    Freeze,
    Burn,
    Poison,
    Confusion,
    Infatuation,
    Trap,
    Nightmare,
    Torment = 12U,
    Disable,
    Yawn,
    HealBlock,
    NoTypeImmunity = 17U,
    LeechSeed,
    Embargo,
    PerishSong,
    Ingrain,
    Silence = 24,
    BadPoison,
    AllPrimary,
    AllSecondary,
    All
};

UENUM(BlueprintType)
enum class EPokemonMoveCategory : uint8
{
    Damage = 0U,
    Ailment,
    StatsModifier,
    Heal,
    DamageAndAilment,
    Swagger,
    DamageAndLower,
    DamageAndRaise,
    DamageAndHeal,
    OHKO,
    WholeFieldEffect,
    FieldEffect,
    ForceSwitch,
    Unique
};

UENUM(BlueprintType)
enum class EPokemonMoveTarget : uint8
{
    None = 0U,
    SpecificMove,
    SelectedPokemonMeFirst,
    Ally,
    UsersField,
    UserOrAlly,
    OpponentsField,
    User,
    RandomOpponent,
    AllOtherPokemons,
    SelectedPokemon,
    AllOpponents,
    EntireField,
    UserAndAllies,
    AllPokemon,
    AllAllies
};

UENUM(BlueprintType)
enum class EPokemonMoveDamageClass : uint8
{
    None = 0U,
    Status = 1U,
    Physical = 2U,
    Special = 3U,
};

UENUM(BlueprintType)
enum class EPokemonMoveLearnMethod : uint8
{
    None = 0U,
    LevelUp = 1U,
    Egg = 2U,
    Tutor = 3U,
    Machine = 4U
};

UENUM(BlueprintType)
enum class EItemFlingEffect : uint8
{
    None = 0U,
    BadlyPoison,
    Burn,
    BerryEffect,
    HerbEffect,
    Paralyze,
    Poision,
    Flinch
};

UENUM(BlueprintType)
enum class EItemAttribute : uint8
{
    None = 0U,
    Countable,
    Consumable,
    UsableOverworld,
    UsableInBattle,
    Holdable,
    HoldablePassive,
    HoldableActive,
    Underground
};

UENUM(BlueprintType)
enum class EItemPocket : uint8
{
    None = 0U,
    Misc,
    Medicine,
    Pokeballs,
    Machines,
    Berries,
    Mail,
    Battle,
    Key
};

UENUM(BlueprintType)
enum class EItemCategory : uint8
{
    None = 0U,
    StatBoosts,
    EffortDrop,
    Medicine,
    BerryOther,
    BerryInAPinch,
    BerryPickyHealing,
    BerryTypeProtection,
    BerryBakingOnly,
    Collectibles,
    Evolution,
    Repels,
    HeldItems,
    Choiced,
    EffortTraining,
    BadHeldItems,
    Training,
    Plates,
    SpeciesSpecific,
    TypeEnhancement,
    EventItems,
    Gameplay,
    PlotAdvancement,
    Unused,
    Loot,
    Mail,
    Vitamins,
    Healing,
    PpRecovery,
    Revival,
    StatusCures,
    Unused2,
    Mulch,
    SpecialBalls,
    StandardBalls,
    DexCompletion,
    Scarves,
    TMS,
    Flutes,
    ApricornBalls,
    ApricornBox,
    DataCards,
    Jewels,
    MiracleShooter,
    MegaStones,
    Memories,
    ZCrystals,
    SpeciesCandies,
    CatchingBonus,
    DynamaxCrystals,
    NatureMints,
    CurryIngredients,
    TeraShard,
    SandwichIngredients,
    TmMaterials,
    Picnic
};

UCLASS()
class UPokemonUtils : public UObject
{
    GENERATED_BODY()

public:
    UFUNCTION()
    static void InitDatabase();

    static TMap<EPokemonAnimations, FString> AnimationPathNames;

    static FString GetAnimationNameForPokemon(const int32 entry, const EPokemonAnimations pokemonAnimation, const EPokemonAnimTier pokemonAnimTier, const uint8 gender);

    UFUNCTION(BlueprintPure)
    static FString FirstLetterToUppercase(const FString name);

private:
    static bool isDatabaseLoaded;
};

UCLASS()
class UBaseData : public UPrimaryDataAsset
{
    GENERATED_BODY()

public:

    FPrimaryAssetId GetPrimaryAssetId() const override { return FPrimaryAssetId(FPrimaryAssetType(GetClass()->GetFName()), FName(*FString::FromInt(Id))); };

    UPROPERTY(EditAnywhere, BlueprintReadOnly, Category = "Pokemon")
    int32 Id;

    UPROPERTY(EditAnywhere, BlueprintReadOnly, Category = "Pokemon")
    bool IsValid;
};
